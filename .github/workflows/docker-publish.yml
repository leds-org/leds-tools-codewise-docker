name: Build and Publish Docker Image to GitHub Packages

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  review:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get committed code
        id: get_code
        run: |
          # Get the latest commit hash
          COMMIT_HASH=$(git rev-parse HEAD)
          
          # Extract the code changes
          git diff-tree --no-commit-id --name-only -r $COMMIT_HASH > files.txt
          
          # Concatenate all changed files into one file
          for file in $(cat files.txt); do
            echo "Processing $file"
            cat "$file" >> combined_code.txt
            echo "" >> combined_code.txt
          done
          
          # Output the combined code file as an artifact
          echo "::set-output name=code_file::combined_code.txt"

      - name: Log in to GitHub Packages
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: echo $GITHUB_TOKEN | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Run Docker container from GitHub Packages
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_ENGINE: ${{ secrets.OPENAI_ENGINE }}
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          docker run \
            -e OPENAI_API_KEY=$OPENAI_API_KEY \
            -e OPENAI_ENGINE=$OPENAI_ENGINE \
            -e DISCORD_WEBHOOK_URL=$DISCORD_WEBHOOK_URL \
            -v $(pwd)/combined_code.txt:/app/combined_code.txt \
            ghcr.io/YOUR_GITHUB_USERNAME/code-review-container:latest combined_code.txt python

  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write  # Required permission to push the Docker image
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to GitHub Docker registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ghcr.io/${{ github.repository }}:latest

    - name: Image digest
      run: echo ${{ steps.docker_build.outputs.digest }}


  